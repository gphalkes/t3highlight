%include = "def/number.lang"

%define {
	name = "unicode-string-escape"
	%pattern {
		regex = '\\(?:u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})'
		style = "string-escape"
	}
}
%define {
	name = "string-escape"
	%pattern {
		regex = '\\(?:x[0-9a-fA-F]+|[0-7]{1,3}|.)'
		style = "string-escape"
	}
}
%define {
	name = "doxygen-keywords"
	%pattern {
		regex = '@(?:[@\\]addindex|addtogroup|anchor|arg|attention|' +
		'author|a|brief|bug|b|callgraph|callergraph|category|class|code|' +
		'cond|copybrief|copydetails|copydoc|c|date|defgroup|def|deprecated|' +
		'details|dir|dontinclude|dot|dotfile|else|elseif|em|endcode|' +
		'endcond|enddot|endhtmlonly|endif|endlatexonly|endlink|endmanonly|' +
		'endmsc|endverbatim|endxmlonly|enum|example|exception|extends|e|f\$|' +
		'f\[|f\]|f\{|f\}|file|fn|headerfile|hideinitializer|htmlinclude|' +
		'htmlonly|ifnot|if|image|implements|includelineno|include|ingroup|' +
		'internal|invariant|interface|latexonly|line|link|li|mainpage|' +
		'manonly|memberof|msc|name|namespace|nosubgrouping|note|n|overload|' +
		'package|page|paragraph|param|par|post|pre|private|privatesection|' +
		'property|protectedsection|protected|protocol|publicsection|public|' +
		'p|ref|relatesalso|relates|remarks|return|retval|sa|section|see|' +
		'showinitializer|since|skipline|skip|struct|subpage|subsection|' +
		'subsubsection|test|throw|todo|tparam|typedef|union|until|var|' +
		'verbatim|verbinclude|version|warning|weakgroup|xmlonly|xrefitem|\$|' +
		'@|\\|&|~|<|>|#|%)'
		style = "comment-keyword"
	}
	#FIXME: also include C# xml type commands that are also accepted by doxygen
}

%define {
	name = "c-comment"
	%pattern {
		start = '/\*[*!]'
		%pattern { use = "doxygen-keywords" }
		end = '\*/'
		style = "comment"
	}
	%pattern {
		start = '/\*'
		end = '\*/'
		style = "comment"
	}
}
%define {
	name = "c++-comment"
	%pattern {
		start = '//[/!]'
		%pattern { use = "doxygen-keywords" }
		end = '(?<!\\)$'
		style = "comment"
	}
	%pattern {
		start = '//'
		end = '(?<!\\)$'
		style = "comment"
	}
}

%define {
	name = "c-base"

	%pattern { use = "c-comment" }
	%pattern { use = "c++-comment" }

	%pattern {
		start = '(?:\bL)?"'
		%pattern { use = "string-escape" }
		end = '"|(?:\G|[^\\])\K$'
		style = "string"
	}

	%pattern {
		start = "(?:\bL)?'"
		%pattern { use = "string-escape" }
		end = "'|(?:\G|[^\\])\K$"
		style = "string"
	}

	%pattern {
		start = '^\s*#\s*include'
		%pattern { use = "c-comment" }
		%pattern { use = "c++-comment" }
		%pattern {
			start = '"'
			end = '"|(?<!\\)$'
			style = "string"
		}
		%pattern {
			start = '<'
			end = '>|(?<!\\)$'
			style = "string"
		}
		end = '(?<!\\)$'
		delim-style = "misc"
	}

	%pattern {
		regex = '^\s*#\s*\w*'
		style = "misc"
	}
}
