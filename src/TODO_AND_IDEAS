DESIGN GOALS:
- State should be no more than a single integer
- Highlighting does not have to provide very advanced features, as long as most
	things like comments, strings, keywords and a few other things can be
	highlighted.

TODO:
Library:
- Prevent infinte loops caused by start and end matching the empty string, or
	other patterns that do not cause progression
- Change pattern matching code to step through all the characters using
	PCRE_ANCHORED
- Use the correct order for end vs. %pattern
- Use pcre_study to optimize pattern (also allows requesting minsize)
- Defining and referencing other patterns + include mechanism
- File regexes should be in a separate file, such that they can be read without
	reading all the separate language definitions files. That may give a problem
	with user defined definitions.
- How can we list the names of the different language definitions without
	reading all of them? I guess we should have a file with meta information,
	which we use instead of reading the files themselves (see also above). This
	works for the standard installed files, but not for the files the user
	may create.
- Support and detect Emacs language identifiers (-*- <name> -*- or something)
	and vi/vim modelines
- UTF-8 mode

t3highlight-source:
- come up with a better name (t3highlight would be OK, if it were not for the
	annoying clash with the include dir symlink)
- allow style definitions
- add html/latex/etc escaping of inputs (i.e. sed scripts or something like it)


Generic:
- define a list of default style names to use
- convert nano/GNU source-highlight/other highlighting patterns if possible
